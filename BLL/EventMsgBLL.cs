//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BLL
{
    using System;
    using IBLL;
    using IDAL;
    using Model;
    using System.Collections.Generic;

    public partial class EventMsgBLL : BaseBLL<EventMsg>, IEventMsgBLL
    {
        protected IEventMsgDAL dal;
        public EventMsgBLL(IEventMsgDAL dal)
        {
            this.dal = dal;
            base.baseDAL = dal;
        }

        public void HandlerTheEvent(EventMsg EventMsg)
        {
            EventTypeEnum type;
            bool res = Enum.TryParse<EventTypeEnum>(EventMsg.Event, out type);
            if (!res)
            {
                return;
            }
            switch (type)
            {
                case EventTypeEnum.subscribe:
                    if (EventMsg.EventKey != null)
                    {
                        //扫描带参数二维码事件用户未关注时，进行关注后的事件推送
                        //TODO
                    }
                    else
                    {
                        //订阅时的操作
                        ProcessSubscribe();
                    }

                    break;
                case EventTypeEnum.unsubscribe:
                    ProcessUnSubscribe();
                    break;
                case EventTypeEnum.SCAN:
                    //扫描带参数二维码事件用户已关注时的事件推送
                    //TODO
                    break;
                case EventTypeEnum.LOCATION:
                    //上报地理位置事件
                    //TODO
                    break;
                case EventTypeEnum.CLICK:
                    //自定义菜单事件
                    //TODO
                    break;
                case EventTypeEnum.VIEW:
                    //点击菜单跳转链接时的事件推送
                    //TODO
                    break;
            }
        }

        #region 订阅时的操作
        private void ProcessSubscribe()
        {
            //TODO
        }
        #endregion

        #region 解除订阅时的操作
        private void ProcessUnSubscribe()
        {
            //TODO
        }
        #endregion








    }
}
